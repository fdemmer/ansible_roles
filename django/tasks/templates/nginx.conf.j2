
upstream django {
{% if use_gunicorn %}
    server {{ gunicorn_host }}:{{ gunicorn_port }} fail_timeout=0;
{% elif use_uwsgi %}
{% if use_uwsgi_socket %}
    server unix://{{ uwsgi_socket }};
{% else %}
    server {{ uwsgi_host }}:{{ uwsgi_port }} fail_timeout=0;
{% endif %}
{% endif %}
}

{% if nginx_redirect_https %}
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    return 302 https://$host$request_uri;
}
{% endif %}

server {
{% if not nginx_redirect_https %}
    listen 80 default_server;
    listen [::]:80 default_server;
{% endif %}
    listen 443 ssl{% if nginx_version_dev %} http2{% endif %};
    listen [::]:443 ssl{% if nginx_version_dev %} http2{% endif %};

    ssl_certificate {{ ssl_path }}/server.crt;
    ssl_certificate_key {{ ssl_path }}/server.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    {% if nginx_version_dev %}ssl_session_tickets off;{% endif %}

    gzip_vary on;
    gzip_types text/plain text/css image/svg+xml application/xml application/javascript application/json;

    client_max_body_size 30m;

    location ^~ /static  {
        alias {{ static_path }}/;
        autoindex {{ nginx_autoindex_static_path }};
    }

    location ^~ /media  {
        alias {{ media_path }}/;
        autoindex {{ nginx_autoindex_media_path }};
    }

    location ^~ /docs  {
        alias {{ docs_path }}/;
        autoindex {{ nginx_autoindex_static_path }};
        disable_symlinks off;
    }

    location / {
        try_files $uri @django_proxy;
    }

    location @django_proxy {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
{% if use_gunicorn %}
        proxy_pass http://django;
{% elif use_uwsgi %}
        include uwsgi_params;
        uwsgi_pass django;
{% endif %}
    }

{% if nginx_error_page %}
    error_page 502 503 504 /maintenance.html;
    location = /maintenance.html {
        alias {{ static_path }}/maintenance.html;
    }
{% endif %}

    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    access_log {{ nginx_log_path }}/access.log;
    error_log {{ nginx_log_path }}/error.log;
}
